spring.application.name=music

# MySQL \uB370\uC774\uD130\uC18C\uC2A4 \uC124\uC815
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/music?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=1234


# JPA \uC124\uC815
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show_sql=true

# JPA (Hibernate) \uC124\uC815
# spring.jpa.hibernate.ddl-auto: \uD14C\uC774\uBE14 \uC790\uB3D9 \uC0DD\uC131 \uBC0F \uAC31\uC2E0 \uC635\uC158 \uC124\uC815.
# \uCD94\uCC9C \uC635\uC158: update (\uAE30\uC874 \uD14C\uC774\uBE14\uC740 \uC720\uC9C0\uD558\uBA70 \uBCC0\uACBD\uB41C \uCEEC\uB7FC \uC790\uB3D9 \uBC18\uC601)
# \uC8FC\uC758 \uC635\uC158: none \uB610\uB294 validate (\uC790\uB3D9 \uBCC0\uACBD \uC5C6\uC74C)

# Spring Security OAuth2 \uD074\uB77C\uC774\uC5B8\uD2B8 \uB4F1\uB85D (Google)
spring.security.oauth2.client.registration.google.client-id=xxxx
spring.security.oauth2.client.registration.google.client-secret=yyyy
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Spring Security OAuth2 \uD504\uB85C\uBC14\uC774\uB354 \uC124\uC815 (Google)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# JWT \uC124\uC815
jwt.secret=b2F1dGhzZXJ2ZXJzZWNyZXRhY2Nlc3N0b2tlbm9hdXRoc2VydmVyc2VjcmV0YWNjZXNzdG9rZW5vYXV0aHNlcnZlcnNlY3JldGFjY2Vzc3Rva2Vu
jwt.expmin=120

# OAuth (Google)
oauth.google.client-id=xxxx
oauth.google.client-secret=yyyy
oauth.google.redirect-uri=http://localhost:3000/oauth/google/redirect

# \uC774\uBA54\uC77C\uC5D0 \uC784\uC2DC \uBE44\uBC00\uBC88\uD638 \uBCF4\uB0B4\uB294\uAC83
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=blackgurotest@gmail.com
spring.mail.password=afkx sbof hlhm kgfk
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# 파일 업로드 설정
music.upload.path=uploads/music
music.base.url=http://localhost:8080

# 파일 업로드 크기 제한 (200MB)
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# 정적 리소스 서빙 설정
spring.web.resources.static-locations=classpath:/static/,file:uploads/

# 파일 업로드 설정
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=1MB

# 음악 파일 업로드 경로 설정
music.upload.path=uploads/music
music.base.url=http://localhost:8080

# 로그 레벨 설정
logging.level.com.music.music.service.MusicUploadService=INFO
logging.level.root=INFO
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

# \uCD94\uAC00 \uC124\uC815
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000


